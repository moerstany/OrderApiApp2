// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderApiApp2.Models;

#nullable disable

namespace OrderApiApp2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230425115231_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "btree_gin");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "btree_gist");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "citext");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "cube");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "dblink");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "dict_int");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "dict_xsyn");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "earthdistance");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "fuzzystrmatch");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "intarray");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "ltree");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_stat_statements");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_trgm");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgrowlocks");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgstattuple");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "tablefunc");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "unaccent");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "xml2");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderApiApp2.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_client");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("IdClient"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("client_name");

                    b.HasKey("IdClient")
                        .HasName("client_pkey");

                    b.ToTable("client");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_factura");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("Articul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("articul");

                    b.Property<int?>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("id_client");

                    b.Property<int?>("IdOrder")
                        .HasColumnType("integer")
                        .HasColumnName("id_order");

                    b.Property<int?>("IdProduct")
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("product_name");

                    b.Property<int>("Qantity")
                        .HasColumnType("integer")
                        .HasColumnName("qantity");

                    b.HasKey("IdFactura")
                        .HasName("factura_pkey");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Orders", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_order");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOrder"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("description");

                    b.Property<int?>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("id_client");

                    b.HasKey("IdOrder")
                        .HasName("orders_pkey");

                    b.HasIndex("IdClient");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Articul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("articul");

                    b.Property<double>("Cost")
                        .HasColumnType("double precision")
                        .HasColumnName("cost");

                    b.Property<string>("ProdPic")
                        .HasMaxLength(900)
                        .HasColumnType("character varying(900)")
                        .HasColumnName("prod_pic");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("product_name");

                    b.HasKey("IdProduct")
                        .HasName("product_pkey");

                    b.ToTable("product");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Factura", b =>
                {
                    b.HasOne("OrderApiApp2.Models.Client", "IdClientNavigation")
                        .WithMany("Factura")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("factura_id_client_fkey");

                    b.HasOne("OrderApiApp2.Models.Orders", "IdOrderNavigation")
                        .WithMany("Factura")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("factura_id_order_fkey");

                    b.HasOne("OrderApiApp2.Models.Product", "IdProductNavigation")
                        .WithMany("Factura")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("factura_id_product_fkey");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdOrderNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Orders", b =>
                {
                    b.HasOne("OrderApiApp2.Models.Client", "IdClientNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("orders_id_client_fkey");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Client", b =>
                {
                    b.Navigation("Factura");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Orders", b =>
                {
                    b.Navigation("Factura");
                });

            modelBuilder.Entity("OrderApiApp2.Models.Product", b =>
                {
                    b.Navigation("Factura");
                });
#pragma warning restore 612, 618
        }
    }
}
